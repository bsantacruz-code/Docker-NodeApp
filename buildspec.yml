version: 0.2

env:
  variables:
      BC_SOURCE: "codebuild"
      PRISMA_API_URL: "https://api2.prismacloud.io"
  parameter-store:
      BC_API_KEY: "bc-api-key"
phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo Installing Checkov...
      - pip3 install checkov
      - echo Installing codebuild-extras...
      - curl -fsSL https://raw.githubusercontent.com/bridgecrewio/aws-codebuild-extras/master/install >> extras.sh
      - . ./extras.sh
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 299186857980.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=299186857980.dkr.ecr.us-east-1.amazonaws.com/ccs-nodeapp-netdata
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - docker login -u bsnthacruz@gmail.com -p @Ba2809**Ã±
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - pip3 uninstall -y aws-sam-cli
      - checkov -d . --use-enforcement-rules --bc-api-key $BC_API_KEY --repo-id $CODEBUILD_ACCOUNT_ID/$CODEBUILD_PROJECT --branch $CODEBUILD_GIT_BRANCH -o cli -o junitxml --output-file-path console,test_results.xml
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"nodeapp","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - docker logout
reports:
  prisma-cloud-infrastructure-security:
    files:
       - test_results.xml
    discard-paths: yes
    file-format: JunitXml
artifacts:
    files: imagedefinitions.json
